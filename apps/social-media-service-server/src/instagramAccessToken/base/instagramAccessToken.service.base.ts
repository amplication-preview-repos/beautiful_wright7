/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  InstagramAccessToken as PrismaInstagramAccessToken,
} from "@prisma/client";

export class InstagramAccessTokenServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.InstagramAccessTokenCountArgs, "select">
  ): Promise<number> {
    return this.prisma.instagramAccessToken.count(args);
  }

  async instagramAccessTokens<
    T extends Prisma.InstagramAccessTokenFindManyArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.InstagramAccessTokenFindManyArgs>
  ): Promise<PrismaInstagramAccessToken[]> {
    return this.prisma.instagramAccessToken.findMany<Prisma.InstagramAccessTokenFindManyArgs>(
      args
    );
  }
  async instagramAccessToken<
    T extends Prisma.InstagramAccessTokenFindUniqueArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.InstagramAccessTokenFindUniqueArgs>
  ): Promise<PrismaInstagramAccessToken | null> {
    return this.prisma.instagramAccessToken.findUnique(args);
  }
  async createInstagramAccessToken<
    T extends Prisma.InstagramAccessTokenCreateArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.InstagramAccessTokenCreateArgs>
  ): Promise<PrismaInstagramAccessToken> {
    return this.prisma.instagramAccessToken.create<T>(args);
  }
  async updateInstagramAccessToken<
    T extends Prisma.InstagramAccessTokenUpdateArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.InstagramAccessTokenUpdateArgs>
  ): Promise<PrismaInstagramAccessToken> {
    return this.prisma.instagramAccessToken.update<T>(args);
  }
  async deleteInstagramAccessToken<
    T extends Prisma.InstagramAccessTokenDeleteArgs
  >(
    args: Prisma.SelectSubset<T, Prisma.InstagramAccessTokenDeleteArgs>
  ): Promise<PrismaInstagramAccessToken> {
    return this.prisma.instagramAccessToken.delete(args);
  }
}
